#!/bin/bash

##------------------------ Parse the option switches
DMENU="dmenu"
FOLDER="tasks"
while [ $# -gt 0 ]
do
	case "$1" in
		"-f") if [ -d $2 ]; then 
					FOLDER=$2
				else
					echo "Bad Dir"
				fi;;
		"-nf") DMENU="$DMENU -nf $2";;
		"-nb") DMENU="$DMENU -nb $2";;
		"-sf") DMENU="$DMENU -sb $2";;
		"-sb") DMENU="$DMENU -sb $2";;
		"-b") DMENU="$DMENU -b";;
	esac
	shift
done

#echo $FOLDER
echo $DMENU

##------------------------ Find the number of days in current month
first=1
last=$( date -d "`date -d "next month" +%m/01/%Y` yesterday" +%d )

##------------------------ Write Task into file
function write()
{
	if [ "$text" == "" ]; then 
		echo "Nothing to write"
	else
		echo "$text" >> $fil
	fi
}

##------------------------ Delete a Task
function Delete()
{
	ans=$(echo -e "NO\nYES" | $DMENU -p "Do you want to delete the task? ")
	if [ "$ans" == "YES" ]; then
		sed -i "/$text/d" $fil
		if [ "`cat $fil`" == "" ]; then
			rm $fil
		fi
	#else
		#echo "Not Deleted"
	fi
}

##------------------------ Delete entire Day
function Delete_Day()
{
	#echo "rm $fil"
	ans=$(echo -e "NO\nYES" | $DMENU -p "Delete entire day's task list? ")
	if [ "$ans" == "YES" ]; then
		rm $fil
	fi
}


##------------------------ Main logic of the program
while true
do
day=$(for i in $(seq $last)
do
	echo $i
done | $DMENU -p `date +%B_%Y`)

if [ -z $day ] 
then
	exit
else
	if (( $day<$first || $day>$last))
	then
		echo "Wrong Date - "$day
	else
		fil=$FOLDER/`date +%B_%Y`_$day
		#echo "File is "$fil
		if [ -e $fil ]
		then
			text=$(echo -e "`cat $fil | sort -n`\n#delete_all" | $DMENU )
			if [ "$text" != "" ]; then
				if [ "$text" == "#delete_all" ]; then 
					Delete_Day
				else
					grep "$text" $fil > /dev/null
					if (($? != "0"))
					then
						write
					else
						Delete
					fi
				fi
			fi
		else
			text=$(echo "" | sort -n | $DMENU )
			write
		fi
	fi
fi
done
